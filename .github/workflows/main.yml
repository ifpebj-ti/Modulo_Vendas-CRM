# This is a basic workflow to help you get started with Actions

name: CI/CD pipeline

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]

  workflow_dispatch:

jobs:
  lint:
    name: Run lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install dependencies
        run: npm install
      - name: Run lint
        run: npm run lint

  Test:
    runs-on: ubuntu-latest
    name: Run tests
    needs: lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '18'
      - name: Install dependencies
        run: |
          npm install
      - name: Run tests
        run: |
          npm run test

  Build:
    runs-on: ubuntu-latest
    name: Run build
    needs: Test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - uses: actions/setup-node@v2
      - name: Install dependencies
        run: npm install
      - name: Run tests
        run: npm run test

  horusec-security:
    name: horusec-security
    needs: Build
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2
      with: # Required when commit authors is enabled
        fetch-depth: 0
    - name: Running Horusec Security
      run: |
        curl -fsSL https://raw.githubusercontent.com/ZupIT/horusec/main/deployments/scripts/install.sh | bash -s latest
        horusec start -p="./" -e="true" --disable-docker="true"

  build_dockerfile:
    name: Build Docker image
    needs: horusec-security
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: 'arm64,arm'
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/crm-cavalcante:vendas

  Execute_POST_request:
    name: Execute POST request
    needs: build_dockerfile
    runs-on: ubuntu-latest
    steps:
      - name: Execute POST request
        uses: muinmomin/webhook-action@v1.0.0
        with:
          url: ${{ secrets.WEBHOOK_URL }}
          data: '{"stackName": "crm-cavalcante", "stackStatus": "success"}'
  
  
  
      

    
